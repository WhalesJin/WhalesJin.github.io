# Site
repository: WhalesJin/WhalesJin.github.io
favicon: images/favicon.ico

# Content configuration version
version: 2

# Personal info
name: 서혜진
title: 호기심을 해결하는 iOS 개발자 서혜진입니다.
email: whales.w.jin@gmail.com
website: https://github.com/WhalesJin

# Dark Mode (true/false/never)
darkmode: never

# Social links
# twitter_username: facespics
github_username:  WhalesJin
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
# facebook_username: jekyll
# flickr_username: jekyll
# instagram_username: jameswgrant
# linkedin_username: jameswgrant
# xing_username: jekyll
# pinterest_username: jekyll
# youtube_username: globalmtb
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# Additional icon links
# additional_links:
# - title: itsgoingto.be
#   icon: fas fa-globe
#   url: https://www.itsgoingto.be
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
# about_title: About Me
about_profile_image: images/profile.jpg
about_content: | # this will include new lines to allow paragraphs
    **호기심이 풍부하고, 이를 해결하기 위해 직접 움직입니다.** <br>
    공부하며 궁금한 것이 생기면 이를 해결하기 위해 적극적으로 움직입니다. 특히 알고리즘 문제를 풀 때는 정답을 맞히는 것에 그치지 않고, 다양한 풀이를 시도해 보는 것을 좋아합니다. 풀지 못한 문제는 적지만 정답률이 낮은 이유는 비슷한 코드의 차이를 직접 보기 위해 다양한 시도를 했기 때문입니다. (<a href="https://www.acmicpc.net/user/whales" target="_blank">알고리즘 통계</a>)
    <br><br>
    **사람을 좋아하며, 소통과 협업을 좋아합니다.** <br>
    야곰 아카데미 캠프에서의 11개의 팀 프로젝트와 30회 이상의 소모임 활동학습을 통해, 소통과 협업의 중요성을 몸소 체험했습니다. 특히 프로젝트 진행에 있어 편안한 소통이 중요하다고 생각하여, 팀원들에게 먼저 친근하게 다가가 질문을 하고 경청하며 편안한 분위기를 만들려고 노력했습니다. 이러한 노력을 통해 프로젝트가 끝난 후에 동료들로부터 '프로젝트를 편안하고, 즐겁게 진행할 수 있었다’는 긍정적인 피드백을 받을 수 있었습니다. (<a href="https://rollingpaper.site/rolls/984829" target="_blank">피드백1</a>, <a href="https://rollingpaper.site/rolls/1001774" target="_blank">피드백2</a>)
content:
  - title: Career # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: "(주)우리요"
        sub_title: "개발팀 - 수습사원"
        caption: 2024.06 - 2024.08
        link: http://wooriyo.com/
        link_text: 홈페이지
        description: | # this will include new lines to allow paragraphs
            **Description**<br>
            '알파요', '핀플', '핀메뉴'의 자사 서비스를 개발 및 제공하며, 외부 프로젝트 및 R&D사업을 수행하는 IT 기업입니다.
            <br><br>
          
            **What I did**<br>
            - 유일한 iOS 개발자로, 알파요(점주, 근로자), 핀플(관리자, 근로자), 핀메뉴(관리, 주문), Pinmenu Mgmt 총 7개의 앱을 개발 및 유지 보수하고 있으며, 총 13번의 앱 스토어 심사를 경험하였습니다.
            - 기존 코드들의 형식을 해치지 않으면서 보다 좋은 코드를 작성하기 위해 낯선 코드를 분석하고, DB를 보는 방법을 배웠으며, API를 통하여 서버와 통신하는 법을 익혔습니다.
            - 회의를 통하여 기획의 의도에 맞춰 코드를 구현하고, 디자인에 맞춰 UI를 구현하며, 지원팀을 통해 듣게 되는 실사용자의 의견을 수렴해 앱을 유지보수하는 경험을 하고 있습니다.
            <br><br>

  - title: Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: "핀메뉴 관리"
        link: https://apps.apple.com/kr/app/%ED%95%80%EB%A9%94%EB%89%B4-%EA%B4%80%EB%A6%AC/id6447057268
        link_text: AppStore
        caption: 2024.06 - 2024.08
        description: | # this will include new lines to allow paragraphs
            **Description**<br>
            오리지널 스마트 메뉴판. 주문앱과 QR코드를 통하여 주문된 내역을 관리할 수 있는 관리앱입니다.<br>
            QR코드를 포함한 매장설정, 주문앱의 메뉴판 설정 및 주문 내역과 실시간 호출 알림 및 관리가 가능합니다.
            <br><br>
          
            **What I did**<br>
            - 예약 주문 기능이 추가됨에 따라 주문 정보 화면에 예약 탭을 생성하고, 그에 맞는 주문 정보 셀 생성 및 구현
            - 사용자의 입장을 고려한 기능 개선 및 UI 수정
            - 인코딩 및 API 통신 오류 해결
            <br><br>
            
            **Spec Sheet**<br>
            <mark>Swift</mark> <mark>UIKit</mark> <mark>MVC</mark> <mark>URLSession</mark> <mark>Alamofire</mark> <mark>Firebase</mark>
            <br><br>

            <div data-toggle="collapse" data-target="#collapse-5" aria-expanded="false" aria-controls="collapse-5" style="cursor:pointer;">
            <p>
              <span class="glyphicon glyphicon-triangle-right" aria-hidden="true" style="font-size: 14px;"></span> <strong style="border-bottom: 1px solid black;">Retrospect</strong><br>
            </p>
            </div>
            <div class="collapse" id="collapse-5">
            <ul>
              <li> 이미 완성된 앱의 코드를 익히며 그에 맞춰 코드를 구현하였습니다. 예약 주문 내역을 보여주는 새로운 기능을 구현하면서 <strong>기존에 있는 코드들과의 통일성</strong>을 해치지 않도록 UI와 코드 구현 방식을 익혔고, 탭을 추가하고 코드의 컨벤션을 맞췄습니다. 그렇지만 비효율적인 화면전환 기법 및 조건문의 중복과 불필요한 분기처리는 <strong>유지보다는 개선을 택하여 수정</strong>하였습니다. </li>
              <li> 현재 고객들이 사용하고 있는 앱에 대하여 빠른 오류 해결과 적절한 기능 개선이 필요함을 직접 겪으며 배웠습니다. 특히 결제 내역이나 메뉴 설명을 보여주는 화면은 고객들의 사업과 직결되는 부분이므로 빠르게 오류를 수정하고 배포하였습니다. </li>
              <li> 관리앱에서 중요한 알림 기능에서 오류가 나지 않도록 FCM을 이용한 Push 알림 기능을 수정 보완했습니다. 로그아웃-로그인을 거치며 Push Token이 사라지는 오류를 발견하고, 코드 경로를 분석하여 오류를 해결하였습니다. </li>
            </ul>
            </div>
    
      - layout: left
        title: "Pinmenu Mgmt"
        link: https://apps.apple.com/kr/app/pinmenu-mgmt/id6504905064
        link_text: AppStore
        caption: 2024.06 - 2024.08
        description: | # this will include new lines to allow paragraphs
            **Description**<br>
            핀메뉴 관리앱을 서양 문화에 맞게 개선한 스마트 오더 관리 앱입니다.<br>
            QR코드를 포함한 매장설정, 주문앱의 메뉴판 설정 및 주문 내역과 실시간 호출 알림 및 관리가 가능합니다.<br>
            Tip과 Tax 문화를 반영하여 주문 내역에 함께 제공됩니다.
            <br><br>
          
            **What I did**<br>
            - 영문으로 언어 변환하여 프로젝트 생성
            - Tip & Tax 기능 생성 및 구현
            - 전체 금액 형식 변경(소수점 반영)
            - PG 관련 기능 미국에 맞게 수정
            - 다국어 기능 개발 중
            <br><br>
            
            **Spec Sheet**<br>
            <mark>Swift</mark> <mark>UIKit</mark> <mark>MVC</mark> <mark>URLSession</mark> <mark>Alamofire</mark> <mark>Firebase</mark>
            <br><br>

            <div data-toggle="collapse" data-target="#collapse-6" aria-expanded="false" aria-controls="collapse-6" style="cursor:pointer;">
            <p>
              <span class="glyphicon glyphicon-triangle-right" aria-hidden="true" style="font-size: 14px;"></span> <strong style="border-bottom: 1px solid black;">Retrospect</strong><br>
            </p>
            </div>
            <div class="collapse" id="collapse-6">
            <ul>
              <li> Tip&Tax 문화를 반영하기 위하여 기존 프로젝트를 복사 및 수정하여 새로운 프로젝트를 생성하였습니다. 디자인 팀에서 받은 번역본에 맞춰 번역하였으며, 없는 부분은 추가로 직접 찾아 수정하였습니다. Localization을 적용하였으나 직원들의 의견을 반영하여 Localization을 제거하고 기본 언어를 전부 영문으로 바꿨습니다. </li>
              <li> Tip&Tax를 매장에서 직접 설정할 수 있도록 설정 화면을 구현하였고, API를 통해 주문내역을 받아오며 Tip과 Tax 또한 보여줄 수 있도록 화면과 코드를 수정하였습니다.</li>
              <li> 한 매장에서 여러 언어를 쓸 수 있도록 다국어 설정 기능을 현재 개발 중에 있습니다. </li>
            </ul>
            </div>

      - layout: left
        title: "2048: Number Sliding"
        link: https://apps.apple.com/kr/app/2048-number-sliding/id6497949242
        link_text: AppStore
        caption: 2023.10 - 2024.04
        description: | # this will include new lines to allow paragraphs
            **Description**<br>
            같은 숫자를 매칭시켜 더 큰 숫자를 만들어보세요! 목표 점수 2048!<br>
            단, 블럭 합성은 세로만 가능합니다.<br>
            (이벤트 블록이 포함되어 있습니다. 첫 화면에서 이벤트 블록의 종류를 선택하세요.)
            <br><br>
          
            **What I did**<br>
            - 해커톤의 조건인 ‘하나의 화면으로 구성된 게임’에 맞도록 게임 기획
            - 협업을 위한 그라운드 룰과 README 작성 리드
            - 게임 보드 화면과 애니메이션을 위한 좌표 계산 및 AutoLayout을 통해 다양한 크기의 화면 대응
            - 현재 최고 점수를 보여주는 Best Score UI 및 로직 구현
            - 블럭의 합성이 연쇄적으로 이루어지도록 게임 로직 수정
            - 앱 출시를 위한 이벤트 블록 기획 및 구현
            <br><br>
            
            **Spec Sheet**<br>
            <mark>Swift</mark> <mark>UIKit</mark> <mark>MVC</mark> <mark>CoreAnimation</mark>
            <br><br>

            <div data-toggle="collapse" data-target="#collapse-1" aria-expanded="false" aria-controls="collapse-1" style="cursor:pointer;">
            <p>
              <span class="glyphicon glyphicon-triangle-right" aria-hidden="true" style="font-size: 14px;"></span> <strong style="border-bottom: 1px solid black;">Retrospect</strong><br>
            </p>
            </div>
            <div class="collapse" id="collapse-1">
            <ul>
              <li> 게임 보드 화면과 애니메이션 구현 시 좌표로 인해 난항을 겪을 거라 주저하는 팀원들을 설득하기 위해 직접 좌표 계산을 했습니다. <strong>적당한 크기로 블록을 설정하고 등차수열을 활용하여 일정한 간격을 기준으로 가로와 세로의 좌표를 그리고 코드로 구현하였습니다.</strong> 해커톤 당시에는 아이폰 12라는 제한이 있어서 직접적인 숫자로 넣었지만 앱 출시 전에 다양한 크기의 디바이스에 대응하기 위해 <strong>AutoLayout</strong>을 구현하였습니다. </li>
              <li> 앱의 완성도를 위해 <u>포기하지 않고 노력</u>했습니다. 블록이 연쇄적으로 더해지지 않는 상황에서 마감시간이 가까워져 마무리하려는 상황에서 고민을 더 하면 해결할 수 있다 판단하여 팀원들을 설득하였습니다. <strong>반복문의 종료 조건을 수정하여 연쇄 합성이 가능하도록 구현</strong>하였고, 결과적으로 완성도를 높일 수 있었습니다. </li>
              <li> 유사한 앱이 존재하여 <a href="https://developer.apple.com/kr/app-store/review/guidelines/" target="_blank">Design Spam</a> 사유로 앱 심사에서 배포가 거절되었습니다. 앱스토어의 유사 앱들과의 차별점을 두기 위해 <strong>Event Block</strong>을 구상하였습니다. Event Block에 따라 게임의 난이도가 달라지고, 이를 사용자가 선택하면 좋을 것 같다고 생각해 <strong>앱의 첫 화면에서 선택할 수 있도록 화면을 추가</strong>하였습니다. </li>
              <li> 앱의 목표 점수에 맞춰서 2048: Number Sliding으로 앱 이름을 지었고, 이에 맞춰 출시일을 4월 28일로 기획하고 앱 심사 신청과 승인을 마쳤습니다. 최종적으로 2024.04.28에 출시하여 현재는 피드백들을 수렴하여 앱 리팩토링 중에 있습니다. </li>
            </ul>
            </div>

  - title: Projects # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: BoxOffice
        additional_links:
          - title: BoxOffice
            icon: fab fa-github
            url: https://github.com/WhalesJin/ios-box-office/tree/step4
        # sub_title: 개인 프로젝트
        caption: 2023.07 - 2023.08
        description: | # this will include new lines to allow paragraphs
            **Description**<br>
            - [영화진흥위원회에서 제공하는 영화 API](https://www.kobis.or.kr/kobisopenapi/homepg/apiservice/searchServiceInfo.do?serviceId=searchDailyBoxOffice)를 사용하여 일별 박스오피스 순위와 영화 상세 정보를 볼 수 있는 앱입니다.<br>
            - 박스오피스 화면은 <u>화면 모드 변경</u> 버튼을 이용하여 리스트/아이콘 두 가지 화면으로 볼 수 있습니다.
            <br><br>
            
            **What I did**<br>
            - [영화진흥위원회의 일별 박스오피스 API 문서](https://www.kobis.or.kr/kobisopenapi/homepg/apiservice/searchServiceInfo.do?serviceId=searchDailyBoxOffice)의 데이터 형식을 고려하여 모델 타입을 구현하고 Parsing 가능 여부에 대한 단위 테스트(Unit Test)를 진행
            - 네트워크 통신을 담당할 타입을 설계 및 구현 후 URLSession을 활용하여 서버와의 통신
            - Modern Collection View를 활용하여 리스트와 그리드 화면 구현
            - Safe Area를 고려한 AutoLayout 구현 및 각 화면의 요소에 Dynamic Type 적용
            <br><br>
            
            **Spec Sheet**<br>
            <mark>Swift</mark> <mark>UIKit</mark> <mark>MVC</mark> <mark>URLSession</mark> <mark>GCD</mark>
            <br><br>

            <div data-toggle="collapse" data-target="#collapse-2" aria-expanded="false" aria-controls="collapse-2" style="cursor:pointer;">
            <p>
              <span class="glyphicon glyphicon-triangle-right" aria-hidden="true" style="font-size: 14px;"></span> <strong style="border-bottom: 1px solid black;">Retrospect</strong><br>
            </p>
            </div>
            <div class="collapse" id="collapse-2">
            <ul>
              <li> API key 값을 프로퍼티로 넣었을 때, private 접근제어를 통해 코드적인 접근은 막았으나 git에 올렸을 때 값이 그대로 노출되는 문제가 발생하였습니다. 노출을 방지하기 위해 새로운 <strong>API_KEY plist를 만들고 이를 .gitignore 파일 내에 추가</strong>하여 추적을 막은 후, value에 실제 API key를 넣었습니다. </li>
              <li> 프로젝트를 진행함에 따라 ViewController가 비대해지며 책임이 불분명해졌고, 본래의 책임만을 다할 수 있도록 각각의 Manager 객체를 만들었습니다.<br>
                    - <strong>NetworkManager</strong>: API를 통해 요청한 Data를 가져옵니다.<br>
                    - <strong>DecodingManager</strong>: Data를 Swift에서 사용할 수 있는 특정 데이터 타입으로 Decoding합니다.<br>
                    - <strong>BoxOfficeManager</strong>: BoxOffice 관련 데이터 타입으로 디코딩된 Data를 Result 타입으로 반환합니다.<br>
                    - <strong>ViewController</strong>: API와의 통신 및 Decoding 과정을 몰라도 되며, BoxOfficeManager를 통해 받은 Data를 가지고 View에 전달하는 역할에 집중할 수 있도록 하였습니다.</li>
            </ul>
            </div>
                
      - layout: left
        title: Diary
        additional_links:
          - title: Diary
            icon: fab fa-github
            url: https://github.com/WhalesJin/ios-diary/tree/step3
        # sub_title: 개인 프로젝트
        caption: 2023.08 - 2023.09
        description: | # this will include new lines to allow paragraphs
            **Description**<br>
            새 일기 작성 및 저장된 일기 수정이 가능한 일기장 앱입니다.
            <br><br>
            
            **What I did**<br>
            - 일기장 데이터를 위한 CoreData 모델 및 CRUD 구현
            - 자동 저장 기능 및 버튼과 스와이프를 통한 공유, 삭제 기능 구현
            - 화면 가로 모드 대응 및 Dynamic Type 적용
            - 날짜, 안내문구 등에 Localization 적용
            <br><br>
            
            **Spec Sheet**<br>
            <mark>Swift</mark> <mark>UIKit</mark> <mark>MVC</mark> <mark>Localization</mark>
            <br><br>

            <div data-toggle="collapse" data-target="#collapse-3" aria-expanded="false" aria-controls="collapse-3" style="cursor:pointer;">
            <p>
              <span class="glyphicon glyphicon-triangle-right" aria-hidden="true" style="font-size: 14px;"></span> <strong style="border-bottom: 1px solid black;">Retrospect</strong><br>
            </p>
            </div>
            <div class="collapse" id="collapse-3">
            <ul>
              <li> 작성한 일기가 날아가지 않게 자동 저장 기능이 필요하다 판단하였습니다.<br>
              저장의 트리거로는 1. 이전 화면으로 이동하는 경우, 2. 앱이 백그라운드로 진입하는 경우, 3. 사용자가 입력을 멈추는 경우(키보드가 사라지는 경우)로 설정하여 코드를 구현하였습니다. </li>
              <li> 저장된 일기를 불러오는 과정에서 오류 발생 시 개발자가 알 수 있게 OS_Log를 사용하였습니다. 하지만, 일기를 작성하는 사용자는 알 수 없기에 이를 수정해야 한다고 판단하였고, <strong>사용자가 상황을 인지하고 앱 재실행을 할 수 있도록</strong> 알려주는 alert을 구현하였습니다. </li>
            </ul>
            </div>
                
      - layout: left
        title: Project Manager
        additional_links:
          - title: Project Manager
            icon: fab fa-github
            url: https://github.com/WhalesJin/ios-project-manager
        # sub_title: 개인 프로젝트
        caption: 2023.09 - 2023.10
        description: | # this will include new lines to allow paragraphs
            **Description**<br>
            하나의 프로젝트를 세분화하여 관리할 수 있는 iPad 가로모드 전용 앱입니다.<br>
            칸반보드를 사용하여 TODO, DOING, DONE으로 분류해 진행도를 한 눈에 확인할 수 있습니다.
            <br><br>
            
            **What I did**<br>
            - 칸반보드를 사용하는 프로젝트 매니저 앱 기획에 맞는 기술 스택 선정
            - Custom View를 alert의 형태로 띄우기 위해 Custom Modifier 구현
            - 항목을 길게 눌러 셀의 위치를 TODO DOING DONE으로 이동 가능하도록 구현
            <br><br>
            
            **Spec Sheet**<br>
            <mark>Swift</mark> <mark>SwiftUI</mark> <mark>MVVM</mark> <mark>클린아키텍처</mark> <mark>Realm</mark>
            <br><br>

            <div data-toggle="collapse" data-target="#collapse-4" aria-expanded="false" aria-controls="collapse-4" style="cursor:pointer;">
            <p>
              <span class="glyphicon glyphicon-triangle-right" aria-hidden="true" style="font-size: 14px;"></span> <strong style="border-bottom: 1px solid black;">Retrospect</strong><br>
            </p>
            </div>
            <div class="collapse" id="collapse-4">
            <ul>
              <li> <a href="https://github.com/WhalesJin/ios-project-manager?tab=readme-ov-file#1%EF%B8%8F%E2%83%A3-%EA%B8%B0%EC%88%A0%EC%8A%A4%ED%83%9D-%EC%84%A4%EC%A0%95" target="_blank">기술 스택 선정</a>에 시간을 들여 고민을 많이 했습니다. 복잡성과 규칙 그리고 의존방향에 대한 고민을 했고 이를 해결해 주는 것이 의존성 규칙에 대해 얘기하는 클린 아키텍처라고 생각했습니다. 클린 아키텍처를 기반으로 하는 다양한 방법 중 MVVM을 접목해서 프로젝트 진행하였습니다. </li>
              <li> 새 할 일 작성과 편집을 위한 view를 alert의 형태로 띄우기 위해 Custom View를 구현하였습니다. 두 개의 view가 형태가 유사하고 Edit 버튼과 Cancel 버튼의 차이만 있어 view를 재사용하면 좋겠다고 생각하였습니다. 이를 위해서 <strong>CustomAlert Modifier</strong>를 새로 생성하여 leftButton의 action을 주입받는 형태로 구현하였습니다. </li>
              <li> 항목의 위치를 옮기기 위해 state 속성을 만들었습니다. 처음 작성한 코드는 각각 분리된 배열로 구현되어있어서 이동하려면 기존 배열에서 remove하고 다른 배열에서 append 하는 방식으로 진행되어야 했습니다. 이런 형태는 상태 변화에 따른 메서드들의 중복을 야기해 <strong><a href="https://github.com/WhalesJin/ios-project-manager?tab=readme-ov-file#5%EF%B8%8F%E2%83%A3--move-to-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0" target="_blank">state 속성을 추가해 state를 기준으로 필터링하여 배열을 분리</a>하였습니다.</strong> 이 방법은 실제로 요소를 다른 배열로 이동시키는 것이 아니라 상태만 바꿈으로 이동하는 것처럼 보이게 할 수 있습니다. </li>
            </ul>
            </div>
            
            
            
  - title: Other # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: iOS 커리어 스타터 캠프
        sub_title: 야곰 아카데미
        caption: 2023.04 - 2023.10
        description: | # this will include new lines to allow paragraphs
            - 20명이 넘는 동기들과 프로젝트와 활동학습을 통해 자기주도적인 학습을 하였고,<br>
            페어프로그래밍을 통해 협업하며 프로젝트를 진행하였습니다.
            - 프로젝트 진행 후에는 현직자의 리뷰를 바탕으로 더 나은 코드에 대해서 학습하고, 앱을 수정/보완 하는 경험을 하였습니다.
        
      - layout: left
        title: 야아톤
        sub_title: 야곰 아카데미
        caption: 2023.10.05 - 2023.10.06
        description: | # this will include new lines to allow paragraphs
            - <a href="https://www.yagom-academy.kr/blog/63" target="_blank">제 2회 야곰 아카데미 해커톤</a> - 24시간동안 주제에 부합하는 단 하나의 뷰로 구성된 앱 구현하기
            - 주제: 게임, 팀: 6조(3인 1조)
            - 앱스토어에 등록된다면 다운로드 하고 싶은 앱 1위로 인기상을 수여하였습니다.
            - 앱을 더 수정/보완하여 `2048: Number Sliding`으로 출시하였습니다.
    

# Footer
footer_show_references: false
# references_title:

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag
